#*
 * Copyright (C) cedarsoft GmbH.
 *
 * Licensed under the GNU General Public License version 3 (the "License")
 * with Classpath Exception; you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *         http://www.cedarsoft.org/gpl3ce
 *         (GPL 3 with Classpath Exception)
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 3 only, as
 * published by the Free Software Foundation. cedarsoft GmbH designates this
 * particular file as subject to the "Classpath" exception as provided
 * by cedarsoft GmbH in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 3 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 3 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact cedarsoft GmbH, 72810 Gomaringen, Germany,
 * or visit www.cedarsoft.com if you need additional information or
 * have any questions.
 *#

News

* 2014-10-03: Release 6.1.1

 * Removed old Maven based generator (use IntelliJ Idea based plugin instead)

 * updated dependencies

 * Prepared for Java 8

* 2014-09-11: Release 6.1.0

 * Major changes: Added support for Neo4J!

 * Last version that supports Maven base generators - users should switch to IntelliJ Idea based plugin.

* 2014-03-11: Release 6.0.0

 * Stax-Mate: Added support for primitive serializers

 * Major changes: First version of IntelliJ Idea based generator

* 2013-07-18: Release 5.0.0

 * Major changes: Generator as IntelliJ Idea plugin

 * Upgraded Jackson to 2.0 (package changes)

 * JSON: No longer dependent on order

 * JSON: Improved verification

 * JSON: Added serializers for primitives

* 2013-03-29: Released 4.1.5

 * Downgraded language level to "1.6"

 * Cleaned up package structure for generator

 * Updated dependencies

* 2013-03-15: Released 4.1.4

 * Fixed encoding issues for JSON based serializers

 * Updated dependencies

* 2013-02-11: Released 4.1.3

 * Fixed MANIFEST.MF: No longer exporting "internal" packages

 * Upgraded FEST-Assert dependencies

 * Updated dependencies

* 2012-08-15: Released 4.1.2

 * Collection Serializer added

 * StaxMate output: Added indentation

 * Inlined HashSerializer added

 * Updated dependency to Codegen

 * Serveral updates to external dependencies

* 2012-02-25: Released 4.1.1

 * Improved Exception messages: Added location

* 2012-01-25: Released 4.1.0

  * Removing JDOM dependencies

  * Improved Namespace handling

* 2012-01-17: Released 4.0.7

  * Updated (commons) version

  * Additional callbacks added

  * IgnoringSerializer improved

* 2011-12-31: Released 4.0.6

  * Updated (commons) version

* 2011-12-08: Released 4.0.5

  * Updated versions of dependencies

* 2011-11-30: Released 4.0.4

  * Updated commons version

* 2011-11-23: Released 4.0.3

  * Added DateTimeZone serializer

* 2011-09-26: Released 4.0.2

  * Updated versions of dependencies

  * Added URL serializer

* 2011-09-03: Released 4.0.1

  * Jackson: Added Enum support

  * Updated versions of dependencies

* 2011-07-09: Released 4.0.0

  * Updated Package structure - therefore the major version number has changed

  * Added basic support for OSGi

  * replaced commons-lang with Guava

* 2011-05-14: Released 3.0.1

  Version 3.0.1 has been released. This version contains the following changes:

  * Jackson: Introduced wrapper for improved API (JacksonParserWrapper)

  * Generator: Fixed verify methods

  * Generator: Using JacksonParserWrapper

  * Internal: Updated Annotations (switched to javax.annotation.Nonnull)

* 2011-12-03: Released 3.0.0

  Version 3.0.0 has been released.
  Several dependencies have been updated to their latest versions. Therefore the new major version number.

* 2010-08-09: Released 2.0.0

  A new major version has been released. This version is a major step forward.


** Serializer (and test) Generator

  The major feature for this release is the availability of a {{{./generator.html}generator}} that generates serializers and test stubs for
  domain objects.

  There also exist a {{{generator/serializer-generator-maven-plugin/index.html}Maven plugin}} that offers additional features.

  That Generator avoids unnecessary manual work when the serializers are created initially.
  It is no longer necessary to type any code when creating serializers. Everything is created automatically.

  But of course the source code can be viewed and edited. So this approach offers maximum flexibility and 


** New abstract tests

   New abstract test classes have been created. Those are based on JUnit and make use of @DataPoint(s).
   Those tests allow the creation of shorter and nicer tests.

   The old basic test classes can still be used. So there is no need to convert old tests.
   But it is strongly recommended to use the new testing infrastructure for new tests.

   The relevant base classes are:

*** For XML based serializers:

 * {{{./xref/com/cedarsoft/serialization/AbstractXmlSerializerTest2.html}<com.cedarsoft.serialization.test.utils.AbstractXmlSerializerTest2>}}

   For roundtrip tests.

 * {{{./xref/com/cedarsoft/serialization/AbstractXmlVersionTest2.html}<com.cedarsoft.serialization.test.utils.AbstractXmlVersionTest2>}}

  For read-only tests of old versions

*** For other serializers:

 * {{{./xref/com/cedarsoft/serialization/AbstractSerializerTest2.html}<com.cedarsoft.serialization.test.utils.AbstractXmlSerializerTest2>}}

   For roundtrip tests.

 * {{{./xref/com/cedarsoft/serialization/AbstractVersionTest2.html}<com.cedarsoft.serialization.test.utils.AbstractXmlVersionTest2>}}

  For read-only tests of old versions


** Incompatible API changes

*** Added <formatVersion> to <PluggableSerializer#serialize>

  A parameter has been added to the <serialize> method of <PluggableSerializer>.
  The added <formatVersion> (of type <Version>) represents the version that shall be written.

  It is recommended that every serializer only writes one format version (the most recent one). Details are discussed within the documentation.

  But for those special cases, where it is really necessary to write different format versions, this parameter allows this behaviour.

* 2010-07-09: Released 1.0.3

  A new version has been released. The most important new feature is the availability of the {{{./generator.html}Generator}}.
  This is a huge time saver! So give it a try.
  It is strongly suggested to use the {{{./generator/serializer-generator-maven-plugin/index.html}Generator Maven Plugin}}

  Any feedback (especially concerning the generator) is welcome: {{{mailto:js@cedarsoft.com}js@cedarsoft.com}}.

* 2010-06-02: Released 1.0.2

  Version 1.0.2 has been released.

  It just contains minor bug fixes and slightly improved samples.
  Especially the exceptions thrown on validation (by DelegatesMappings)
  have much better error messages now.


